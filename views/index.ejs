<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Buscador de Animes</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8f9fa;
            color: #333;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
            display: block;
        }

        h1 {
            font-size: 2.5rem;
            font-weight: 600;
            text-align: center;
        }

        #searchInput {
            width: 100%;
            padding: 1rem;
            border: 2px solid #e0e0e0;
            border-radius: 12px;
            outline: none;
        }

        .search-results {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .movie-card {
            background: #fff;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            cursor: pointer;
        }

        .movie-card img {
            width: 100%;
            object-fit: cover;
        }

        .movie-info {
            padding: 1rem;
        }

        /* Estilos del modal */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }

        .modal {
            background-color: #fff;
            border-radius: 12px;
            padding: 2rem;
            max-width: 600px;
            width: 90%;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            text-align: center;
            transform: translateY(-50px);
            transition: transform 0.3s ease;
        }

        .modal.show {
            transform: translateY(0);
        }

        .modal-overlay.show {
            opacity: 1;
            visibility: visible;
        }

        .close-btn {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            cursor: pointer;
            margin-top: 1rem;
        }

        .episode-item,
        .provider-item {
            margin: 0.5rem 0;
            cursor: pointer;
            color: #007bff;
        }

        .episode-item:hover,
        .provider-item:hover {
            text-decoration: underline;
        }

        /* Estilos para el reproductor */
        #videoPlayerContainer {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: black;
            z-index: 1000;
        }

        #videoPlayer {
            width: 100%;
            height: 100%;
            border: none;
        }

        #closeVideoBtn {
            position: absolute;
            top: 20px;
            left: 20px;
            background-color: red;
            color: white;
            border: none;
            padding: 10px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 8px;
        }
    </style>
</head>

<body>

    <div class="container">
        <h1>Buscador de Animes</h1>
        <input type="text" id="searchInput" placeholder="Escribe el nombre de un anime..." aria-label="Buscar animes">
        <div id="resultsContainer" class="search-results"></div>
    </div>

    <!-- Modal para mostrar episodios -->
    <div id="modalOverlay" class="modal-overlay">
        <div class="modal">
            <h2 id="modalTitle">Episodios</h2>
            <div id="episodesList"></div>
            <button class="close-btn" onclick="closeModal()">Cerrar</button>
        </div>
    </div>

    <!-- Modal para mostrar proveedores -->
    <div id="providerModalOverlay" class="modal-overlay">
        <div class="modal">
            <h2>Selecciona un proveedor</h2>
            <div id="providersList"></div>
            <button class="close-btn" onclick="closeProviderModal()">Cerrar</button>
        </div>
    </div>

    <!-- Contenedor del reproductor de video -->
    <div id="videoPlayerContainer">
        <button id="closeVideoBtn" onclick="closeVideo()">âœ– Cerrar</button>
        <iframe id="videoPlayer" sandbox="allow-scripts allow-same-origin"></iframe>
    </div>

    <script>
        const searchInput = document.getElementById('searchInput');
        const resultsContainer = document.getElementById('resultsContainer');
        const modalOverlay = document.getElementById('modalOverlay');
        const modalTitle = document.getElementById('modalTitle');
        const episodesList = document.getElementById('episodesList');
        const providerModalOverlay = document.getElementById('providerModalOverlay');
        const providersList = document.getElementById('providersList');
        const videoPlayerContainer = document.getElementById('videoPlayerContainer');
        const videoPlayer = document.getElementById('videoPlayer');

        const openModal = (title) => {
            modalTitle.textContent = `Episodios de ${title}`;
            modalOverlay.classList.add('show');
        };

        const closeModal = () => {
            modalOverlay.classList.remove('show');
            episodesList.innerHTML = '';
        };

        const openProviderModal = () => {
            providerModalOverlay.classList.add('show');
        };

        const closeProviderModal = () => {
            providerModalOverlay.classList.remove('show');
            providersList.innerHTML = '';
        };

        const handleSearch = async (searchTerm) => {
            if (searchTerm.length < 3) {
                resultsContainer.innerHTML = ''
            }

            const response = await fetch(`/query/${encodeURIComponent(searchTerm)}`);
            const animes = await response.json();

            resultsContainer.innerHTML = animes.map(anime => `
            <div class="movie-card" onclick="loadEpisodes('${anime.slug}', '${anime.title}')">
                <img src="${anime.banner}" alt="${anime.title}">
                <div class="movie-info">
                    <h3>${anime.title}</h3>
                </div>
            </div>
        `).join('');
        };

        const loadEpisodes = async (animeSlug, animeTitle) => {
            openModal(animeTitle);
            episodesList.innerHTML = '<div>Cargando episodios...</div>';

            const response = await fetch(`/episode/${animeSlug}`);
            const episodes = await response.json();

            episodesList.innerHTML = episodes.map(episode => `
            <div class="episode-item" onclick="loadProviders('${animeSlug}', '${episode[0]}')">
                Episodio ${episode[0]}
            </div>
        `).join('');
        };

        const loadProviders = async (animeSlug, episodeId) => {
            openProviderModal();
            const response = await fetch(`/episode/${animeSlug}/${episodeId}`);
            const providers = await response.json();

            providersList.innerHTML = providers.map(provider => `
            <div class="provider-item" onclick="playVideo('${provider.code}')">
                ${provider.title}
            </div>
        `).join('');
        };

        const playVideo = (url) => {
            closeProviderModal();
            videoPlayer.src = url;
            videoPlayerContainer.style.display = 'block';
        };

        const closeVideo = () => {
            videoPlayerContainer.style.display = 'none';
            videoPlayer.src = "";
        };

        searchInput.addEventListener('input', (e) => handleSearch(e.target.value.trim()));
    </script>

</body>

</html>